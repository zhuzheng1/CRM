<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       					   http://www.springframework.org/schema/beans/spring-beans.xsd
       					   http://www.springframework.org/schema/context 
       					   http://www.springframework.org/schema/context/spring-context.xsd
       					   http://www.springframework.org/schema/mvc 
       					   http://www.springframework.org/schema/mvc/spring-mvc.xsd">
       		
    <!-- 配置自定扫描的包 -->
 	<context:component-scan base-package="com.crm.settings.web.controller" />	
 	
 	<!-- 第二种处理静态资源的方式
 		<mvc:resources /> 加入后框架会创建 ResourceHttpRequestHandler 这个处理器对象。
 		让这个对象处理静态资源的访问，不依赖tomcat服务器。
 		mapping:访问静态资源的uri地址，使用通配符 ** 
 		location:静态资源在你的项目中的目录位置。
 		
 	 <mvc:resources />和@RequestMapping注解有一定冲突，需要加入
     <mvc:annotation-driven/> 解决问题
 	 
 	 <mvc:resources location="/test/" mapping="/test/**"></mvc:resources>
 	 -->
 	
 	
 	<!--  第一种解决静态资源的方式
 	<mvc:default-servlet-handler/>和@RequestMapping注解有冲突，需要加入
     <mvc:annotation-driven/> 解决问题
    -->
 	<mvc:default-servlet-handler/>
 	
 	<!-- 解决json返回浏览器乱码问题 -->
 	<mvc:annotation-driven>
 		<mvc:message-converters register-defaults="true">
 			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
 				<constructor-arg value="UTF-8" />
 			</bean>
 			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
 				<property name="objectMapper">
 					<bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
 						<property name="failOnEmptyBeans" value="false" />
 					</bean>
 				</property>
 			</bean>
 		</mvc:message-converters>
 	</mvc:annotation-driven>
 	
 	<!-- 配置视图解析器：如何把 handler 方法返回值解析为实际的物理视图-->
 	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
 		<!-- 前缀，视图文件的路径 -->
 		<property name="prefix" value="/WEB-INF/views/"></property>
 		<!-- 后缀，视图文件的扩展名 -->
 		<property name="suffix" value=".html"></property>
 	</bean>
    
    				 
</beans>